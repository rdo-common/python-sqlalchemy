diff -up SQLAlchemy-0.5.0rc4/test/sql/testtypes.py.unicode SQLAlchemy-0.5.0rc4/test/sql/testtypes.py
--- SQLAlchemy-0.5.0rc4/test/sql/testtypes.py.unicode	2008-12-01 13:36:48.000000000 -0800
+++ SQLAlchemy-0.5.0rc4/test/sql/testtypes.py	2008-12-01 13:38:21.000000000 -0800
@@ -294,7 +294,7 @@ class UnicodeTest(TestBase, AssertsExecu
         unicodedata = rawdata.decode('utf-8')
         unicode_table.insert().execute(unicode_varchar=unicodedata,
                                        unicode_text=unicodedata,
-                                       plain_varchar=rawdata)
+                                       plain_varchar=unicodedata)
         x = unicode_table.select().execute().fetchone()
         self.assert_(isinstance(x['unicode_varchar'], unicode) and x['unicode_varchar'] == unicodedata)
         self.assert_(isinstance(x['unicode_text'], unicode) and x['unicode_text'] == unicodedata)
@@ -313,7 +313,7 @@ class UnicodeTest(TestBase, AssertsExecu
         unicodedata = rawdata.decode('utf-8')
         unicode_table.insert().execute(unicode_varchar=unicodedata,
                                        unicode_text=unicodedata,
-                                       plain_varchar=rawdata)
+                                       plain_varchar=unicodedata)
                                        
         x = union(select([unicode_table.c.unicode_varchar]), select([unicode_table.c.unicode_varchar])).execute().fetchone()
         self.assert_(isinstance(x['unicode_varchar'], unicode) and x['unicode_varchar'] == unicodedata)
@@ -360,7 +360,7 @@ class UnicodeTest(TestBase, AssertsExecu
             unicodedata = rawdata.decode('utf-8')
             unicode_table.insert().execute(unicode_varchar=unicodedata,
                                            unicode_text=unicodedata,
-                                           plain_varchar=rawdata)
+                                           plain_varchar=unicodedata)
             x = unicode_table.select().execute().fetchone()
             print 0, repr(unicodedata)
             print 1, repr(x['unicode_varchar'])
